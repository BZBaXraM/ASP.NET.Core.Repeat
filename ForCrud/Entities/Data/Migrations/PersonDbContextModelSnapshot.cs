// <auto-generated />
using System;
using Entities.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Entities.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class PersonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CountryName")
                        .HasColumnType("text");

                    b.HasKey("CountryId");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            CountryId = new Guid("18f29207-6401-45c2-8820-e400b1c14461"),
                            CountryName = "Azerbaijan"
                        },
                        new
                        {
                            CountryId = new Guid("272d4b54-ed10-4644-96cf-f0fce4b88bb1"),
                            CountryName = "USA"
                        },
                        new
                        {
                            CountryId = new Guid("49e9d52e-32ef-4fd3-b35f-c66df8a8aad3"),
                            CountryName = "Australia"
                        },
                        new
                        {
                            CountryId = new Guid("983bbc9d-3556-4942-8cbf-ad239c532ccd"),
                            CountryName = "Canada"
                        },
                        new
                        {
                            CountryId = new Guid("a77f3c7a-72f0-4646-83d3-bbac2128bff3"),
                            CountryName = "UK"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("PersonName")
                        .HasColumnType("text");

                    b.Property<bool>("ReceiveNewsLetters")
                        .HasColumnType("boolean");

                    b.Property<string>("Tin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(8)")
                        .HasDefaultValue("ABC12345")
                        .HasColumnName("TaxIdentificationNumber");

                    b.HasKey("PersonId");

                    b.HasIndex("CountryId");

                    b.ToTable("Persons", null, t =>
                        {
                            t.HasCheckConstraint("CHK_TIN", "char_length(\"TaxIdentificationNumber\") = 8");
                        });

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("1afa76c1-9c2d-49c1-95a1-4d3a8df91e3e"),
                            Address = "123 Main St, Anytown, USA",
                            CountryId = new Guid("272d4b54-ed10-4644-96cf-f0fce4b88bb1"),
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "john.doe@example.com",
                            Gender = "Male",
                            PersonName = "John Doe",
                            ReceiveNewsLetters = false
                        },
                        new
                        {
                            PersonId = new Guid("7372ca1c-b740-419b-b72a-3b27a55724ce"),
                            Address = "456 Elm St, Othertown, USA",
                            CountryId = new Guid("a77f3c7a-72f0-4646-83d3-bbac2128bff3"),
                            DateOfBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "jane.smith@example.com",
                            Gender = "Female",
                            PersonName = "Jane Smith",
                            ReceiveNewsLetters = false
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.HasOne("Entities.Country", "Country")
                        .WithMany("Persons")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
